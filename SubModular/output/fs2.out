% -*- coding: utf-8 -*-

fstructure('that in France , the principle of slaughter of whole herd has been implemented . ',
	% Properties:
	[
	'markup_free_sentence'('that in France , the principle of slaughter of whole herd has been implemented . '),
	'xle_version'('XLE release of Dec 19, 2011 11:56.'),
	'grammar'('./english/english.lfg'),
	'grammar_date'('Sep 27, 2012 11:53'),
	'grammar_version'('english-2007-06-11'),
	'statistics'('2+1 solutions, 0.380 CPU seconds, 7.448MB max mem, 1076 subtrees unified'),
	'rootcategory'('ROOT'),
	'hostname'('avishek-Inspiron-N5010')
	],
	% Choices:
	[
	
	],
	% Equivalences:
	[
	
	],
	% Constraints:
	[
	cf(1,eq(attr(var(0),'PRED'),semform('be',22,[var(1)],[var(2)]))),
	cf(1,eq(attr(var(0),'SUBJ'),var(2))),
	cf(1,eq(attr(var(0),'XCOMP-PRED'),var(1))),
	cf(1,eq(attr(var(0),'TOPIC'),var(1))),
	cf(1,eq(attr(var(0),'ADJUNCT'),var(3))),
	cf(1,eq(attr(var(0),'CHECK'),var(4))),
	cf(1,eq(attr(var(0),'TNS-ASP'),var(5))),
	cf(1,eq(attr(var(0),'CLAUSE-TYPE'),'decl')),
	cf(1,eq(attr(var(0),'PASSIVE'),'-')),
	cf(1,eq(attr(var(0),'VTYPE'),'copular')),
	cf(1,eq(attr(var(2),'PRED'),semform('principle',5,[],[]))),
	cf(1,eq(attr(var(2),'ADJUNCT'),var(6))),
	cf(1,eq(attr(var(2),'CHECK'),var(7))),
	cf(1,eq(attr(var(2),'NTYPE'),var(8))),
	cf(1,eq(attr(var(2),'SPEC'),var(9))),
	cf(1,eq(attr(var(2),'CASE'),'nom')),
	cf(1,eq(attr(var(2),'NUM'),'sg')),
	cf(1,eq(attr(var(2),'PERS'),'3')),
	cf(1,in_set(var(10),var(6))),
	cf(1,eq(attr(var(10),'PRED'),semform('of',7,[var(11)],[]))),
	cf(1,eq(attr(var(10),'OBJ'),var(11))),
	cf(1,eq(attr(var(10),'PTYPE'),'sem')),
	cf(1,eq(attr(var(11),'PRED'),semform('slaughter',8,[],[]))),
	cf(1,eq(attr(var(11),'ADJUNCT'),var(12))),
	cf(1,eq(attr(var(11),'CHECK'),var(13))),
	cf(1,eq(attr(var(11),'NTYPE'),var(14))),
	cf(1,eq(attr(var(11),'CASE'),'obl')),
	cf(1,eq(attr(var(11),'NUM'),'sg')),
	cf(1,eq(attr(var(11),'PERS'),'3')),
	cf(1,in_set(var(15),var(12))),
	cf(1,eq(attr(var(15),'PRED'),semform('of',10,[var(16)],[]))),
	cf(1,eq(attr(var(15),'OBJ'),var(16))),
	cf(1,eq(attr(var(15),'PTYPE'),'sem')),
	cf(1,eq(attr(var(16),'PRED'),semform('herd',16,[],[]))),
	cf(1,eq(attr(var(16),'ADJUNCT'),var(17))),
	cf(1,eq(attr(var(16),'CHECK'),var(18))),
	cf(1,eq(attr(var(16),'NTYPE'),var(19))),
	cf(1,eq(attr(var(16),'CASE'),'obl')),
	cf(1,eq(attr(var(16),'NUM'),'sg')),
	cf(1,eq(attr(var(16),'PERS'),'3')),
	cf(1,in_set(var(20),var(17))),
	cf(1,eq(attr(var(20),'PRED'),semform('whole',11,[],[]))),
	cf(1,eq(attr(var(20),'CHECK'),var(21))),
	cf(1,eq(attr(var(20),'ATYPE'),'attributive')),
	cf(1,eq(attr(var(20),'DEGREE'),'positive')),
	cf(1,eq(attr(var(21),'_LEX-SOURCE'),'morphology')),
	cf(1,eq(attr(var(18),'_LEX-SOURCE'),'countnoun-lex')),
	cf(1,eq(attr(var(19),'NSEM'),var(22))),
	cf(1,eq(attr(var(19),'NSYN'),'common')),
	cf(1,eq(attr(var(22),'COMMON'),'count')),
	cf(1,eq(attr(var(13),'_LEX-SOURCE'),'morphology')),
	cf(1,eq(attr(var(14),'NSYN'),'common')),
	cf(1,eq(attr(var(7),'_LEX-SOURCE'),'countnoun-lex')),
	cf(1,eq(attr(var(8),'NSEM'),var(23))),
	cf(1,eq(attr(var(8),'NSYN'),'common')),
	cf(1,eq(attr(var(23),'COMMON'),'count')),
	cf(1,eq(attr(var(9),'DET'),var(24))),
	cf(1,eq(attr(var(24),'PRED'),semform('the',4,[],[]))),
	cf(1,eq(attr(var(24),'DET-TYPE'),'def')),
	cf(1,eq(attr(var(1),'PRED'),semform('that',0,[var(2)],[]))),
	cf(1,eq(attr(var(1),'SUBJ'),var(2))),
	cf(1,eq(attr(var(1),'ADJUNCT'),var(25))),
	cf(1,eq(attr(var(1),'NTYPE'),var(26))),
	cf(1,eq(attr(var(1),'CASE'),'obl')),
	cf(1,eq(attr(var(1),'DEIXIS'),'distal')),
	cf(1,eq(attr(var(1),'NUM'),'sg')),
	cf(1,eq(attr(var(1),'PERS'),'3')),
	cf(1,eq(attr(var(1),'PRON-TYPE'),'demon')),
	cf(1,eq(attr(var(1),'TOPIC-TYPE'),'simple')),
	cf(1,in_set(var(27),var(25))),
	cf(1,eq(attr(var(27),'PRED'),semform('in',2,[var(28)],[]))),
	cf(1,eq(attr(var(27),'OBJ'),var(28))),
	cf(1,eq(attr(var(27),'PSEM'),var(29))),
	cf(1,eq(attr(var(27),'PTYPE'),'sem')),
	cf(1,eq(attr(var(28),'PRED'),semform('France',3,[],[]))),
	cf(1,eq(attr(var(28),'CHECK'),var(30))),
	cf(1,eq(attr(var(28),'NTYPE'),var(31))),
	cf(1,eq(attr(var(28),'CASE'),'obl')),
	cf(1,eq(attr(var(28),'NUM'),'sg')),
	cf(1,eq(attr(var(28),'PERS'),'3')),
	cf(1,eq(attr(var(30),'_LEX-SOURCE'),'morphology')),
	cf(1,eq(attr(var(31),'NSEM'),var(32))),
	cf(1,eq(attr(var(31),'NSYN'),'proper')),
	cf(1,eq(attr(var(32),'PROPER'),var(33))),
	cf(1,eq(attr(var(33),'LOCATION-TYPE'),'country')),
	cf(1,eq(attr(var(33),'PROPER-TYPE'),'location')),
	cf(1,in_set('loc',var(29))),
	cf(1,eq(attr(var(26),'NSYN'),'pronoun')),
	cf(1,in_set(var(34),var(3))),
	cf(1,eq(attr(var(34),'PRED'),semform('implement',23,['NULL',var(35)],[]))),
	cf(1,eq(attr(var(34),'SUBJ'),var(35))),
	cf(1,eq(attr(var(34),'CHECK'),var(36))),
	cf(1,eq(attr(var(34),'TNS-ASP'),var(37))),
	cf(1,eq(attr(var(34),'PASSIVE'),'+')),
	cf(1,eq(attr(var(34),'VTYPE'),'main')),
	cf(1,eq(attr(var(35),'PRED'),semform('null_pro',28,[],[]))),
	cf(1,eq(attr(var(35),'NTYPE'),var(38))),
	cf(1,eq(attr(var(35),'PRON-TYPE'),'null')),
	cf(1,eq(attr(var(38),'NSYN'),'pronoun')),
	cf(1,eq(attr(var(36),'_SUBCAT-FRAME'),'V-SUBJ-OBJ')),
	cf(1,eq(attr(var(37),'PERF'),'-_')),
	cf(1,eq(attr(var(37),'PROG'),'-_')),
	cf(1,eq(attr(var(4),'_SUBCAT-FRAME'),'V-SUBJexpl-XCOMPPRED')),
	cf(1,eq(attr(var(5),'MOOD'),'indicative')),
	cf(1,eq(attr(var(5),'PERF'),'+_')),
	cf(1,eq(attr(var(5),'PROG'),'-_')),
	cf(1,eq(attr(var(5),'TENSE'),'pres')),
	cf(1,eq(proj(var(39),'o::'),var(40))),
	cf(1,in_set('Topic',var(40))),
	cf(1,eq(proj(var(41),'o::'),var(42))),
	cf(1,in_set('AdjunctPPinNP',var(42))),
	cf(1,eq(proj(var(43),'o::'),var(44))),
	cf(1,in_set('AdjunctPPinNP',var(44))),
	cf(1,eq(proj(var(45),'o::'),var(46))),
	cf(1,in_set('ClausePunct',var(46))),
	cf(1,in_set('GenGoodPunct',var(46))),
	cf(1,eq(proj(var(47),'o::'),var(48))),
	cf(1,in_set('PassAdj',var(48))),
	cf(1,eq(proj(var(49),'o::'),var(50))),
	cf(1,in_set('NoSpec',var(50))),
	cf(1,eq(proj(var(51),'o::'),var(52))),
	cf(1,in_set('ThatPronoun',var(52))),
	cf(1,eq(proj(var(53),'o::'),var(54))),
	cf(1,in_set('AdjunctPPinNP',var(54)))
	],
	% C-Structure:
	[
	cf(1,subtree(4471,'ROOT',4470,446)),
	cf(1,phi(4471,var(0))),
	cf(1,cproj(4471,var(45))),
	cf(1,subtree(4470,'ROOT',-,6014)),
	cf(1,phi(4470,var(0))),
	cf(1,subtree(6014,'CPtop',6010,3915)),
	cf(1,phi(6014,var(0))),
	cf(1,subtree(6010,'CPtop',6009,132)),
	cf(1,phi(6010,var(0))),
	cf(1,subtree(6009,'CPtop',-,5549)),
	cf(1,phi(6009,var(0))),
	cf(1,cproj(6009,var(39))),
	cf(1,subtree(5549,'TOPICP',-,5542)),
	cf(1,phi(5549,var(0))),
	cf(1,subtree(5542,'NP',-,5527)),
	cf(1,phi(5542,var(1))),
	cf(1,subtree(5527,'NPadj',5525,4347)),
	cf(1,phi(5527,var(1))),
	cf(1,cproj(5527,var(53))),
	cf(1,subtree(5525,'NPadj',-,623)),
	cf(1,phi(5525,var(1))),
	cf(1,subtree(623,'NPzero',-,50)),
	cf(1,phi(623,var(1))),
	cf(1,subtree(50,'N',-,1)),
	cf(1,phi(50,var(1))),
	cf(1,cproj(50,var(51))),
	cf(1,terminal(1,'that',[1])),
	cf(1,phi(1,var(1))),
	cf(1,cproj(1,var(51))),
	cf(1,subtree(4347,'PP',4346,4203)),
	cf(1,phi(4347,var(27))),
	cf(1,subtree(4346,'PP',-,4341)),
	cf(1,phi(4346,var(27))),
	cf(1,subtree(4341,'P',4340,69)),
	cf(1,phi(4341,var(27))),
	cf(1,subtree(4340,'P',-,62)),
	cf(1,phi(4340,var(27))),
	cf(1,subtree(62,'P_BASE',-,61)),
	cf(1,phi(62,var(27))),
	cf(1,terminal(61,'in',[51])),
	cf(1,phi(61,var(27))),
	cf(1,subtree(69,'P_SFX_BASE',-,70)),
	cf(1,phi(69,var(27))),
	cf(1,terminal(70,'+Prep',[51])),
	cf(1,phi(70,var(27))),
	cf(1,subtree(4203,'NP',-,4192)),
	cf(1,phi(4203,var(28))),
	cf(1,subtree(4192,'NPadj',-,789)),
	cf(1,phi(4192,var(28))),
	cf(1,subtree(789,'NPzero',-,782)),
	cf(1,phi(789,var(28))),
	cf(1,subtree(782,'N',781,76)),
	cf(1,phi(782,var(28))),
	cf(1,subtree(781,'N',780,77)),
	cf(1,phi(781,var(28))),
	cf(1,subtree(780,'N',764,79)),
	cf(1,phi(780,var(28))),
	cf(1,subtree(764,'N',-,86)),
	cf(1,phi(764,var(28))),
	cf(1,subtree(86,'N_BASE',-,82)),
	cf(1,phi(86,var(28))),
	cf(1,terminal(82,'France',[73])),
	cf(1,phi(82,var(28))),
	cf(1,subtree(79,'PROP_SFX_BASE',-,80)),
	cf(1,phi(79,var(28))),
	cf(1,terminal(80,'+Prop',[73])),
	cf(1,phi(80,var(28))),
	cf(1,subtree(77,'NAMEKIND_SFX_BASE',-,78)),
	cf(1,phi(77,var(28))),
	cf(1,terminal(78,'+Place',[73])),
	cf(1,phi(78,var(28))),
	cf(1,subtree(76,'NAMETYPE_SFX_BASE',-,75)),
	cf(1,phi(76,var(28))),
	cf(1,terminal(75,'+Country',[73])),
	cf(1,phi(75,var(28))),
	cf(1,subtree(132,'COMMA',-,98)),
	cf(1,phi(132,var(0))),
	cf(1,terminal(98,',',[98])),
	cf(1,phi(98,var(0))),
	cf(1,subtree(3915,'S[fin]',3877,1821)),
	cf(1,phi(3915,var(0))),
	cf(1,subtree(3877,'S[fin]',-,3603)),
	cf(1,phi(3877,var(0))),
	cf(1,subtree(3603,'NP',871,3597)),
	cf(1,phi(3603,var(2))),
	cf(1,subtree(871,'NP',-,866)),
	cf(1,phi(871,var(2))),
	cf(1,subtree(866,'D',865,136)),
	cf(1,phi(866,var(2))),
	cf(1,subtree(865,'D',864,138)),
	cf(1,phi(865,var(2))),
	cf(1,subtree(864,'D',863,140)),
	cf(1,phi(864,var(2))),
	cf(1,subtree(863,'D',862,142)),
	cf(1,phi(863,var(2))),
	cf(1,subtree(862,'D',-,144)),
	cf(1,phi(862,var(2))),
	cf(1,subtree(144,'D_BASE',-,145)),
	cf(1,phi(144,var(2))),
	cf(1,terminal(145,'the',[133])),
	cf(1,phi(145,var(2))),
	cf(1,subtree(142,'D_SFX_BASE',-,143)),
	cf(1,phi(142,var(2))),
	cf(1,terminal(143,'+Det',[133])),
	cf(1,phi(143,var(2))),
	cf(1,subtree(140,'D_TYPE_SFX_BASE',-,141)),
	cf(1,phi(140,var(2))),
	cf(1,terminal(141,'+Art',[133])),
	cf(1,phi(141,var(2))),
	cf(1,subtree(138,'DEF_SFX_BASE',-,139)),
	cf(1,phi(138,var(2))),
	cf(1,terminal(139,'+Def',[133])),
	cf(1,phi(139,var(2))),
	cf(1,subtree(136,'DNUM_SFX_BASE',-,135)),
	cf(1,phi(136,var(2))),
	cf(1,terminal(135,'+SP',[133])),
	cf(1,phi(135,var(2))),
	cf(1,subtree(3597,'NPadj',3617,3660)),
	cf(1,phi(3597,var(2))),
	cf(1,cproj(3597,var(41))),
	cf(1,subtree(3617,'NPadj',-,3377)),
	cf(1,phi(3617,var(2))),
	cf(1,subtree(3377,'NPzero',-,938)),
	cf(1,phi(3377,var(2))),
	cf(1,subtree(938,'N',937,154)),
	cf(1,phi(938,var(2))),
	cf(1,subtree(937,'N',923,158)),
	cf(1,phi(937,var(2))),
	cf(1,subtree(923,'N',-,159)),
	cf(1,phi(923,var(2))),
	cf(1,subtree(159,'N_BASE',-,160)),
	cf(1,phi(159,var(2))),
	cf(1,terminal(160,'principle',[150])),
	cf(1,phi(160,var(2))),
	cf(1,subtree(158,'N_SFX_BASE',-,157)),
	cf(1,phi(158,var(2))),
	cf(1,terminal(157,'+Noun',[150])),
	cf(1,phi(157,var(2))),
	cf(1,subtree(154,'NNUM_SFX_BASE',-,152)),
	cf(1,phi(154,var(2))),
	cf(1,terminal(152,'+Sg',[150])),
	cf(1,phi(152,var(2))),
	cf(1,subtree(3660,'PPnp',-,3205)),
	cf(1,phi(3660,var(10))),
	cf(1,subtree(3205,'PP',1030,3199)),
	cf(1,phi(3205,var(10))),
	cf(1,subtree(1030,'PP',-,1025)),
	cf(1,phi(1030,var(10))),
	cf(1,subtree(1025,'P',1024,177)),
	cf(1,phi(1025,var(10))),
	cf(1,subtree(1024,'P',-,179)),
	cf(1,phi(1024,var(10))),
	cf(1,subtree(179,'P_BASE',-,180)),
	cf(1,phi(179,var(10))),
	cf(1,terminal(180,'of',[176])),
	cf(1,phi(180,var(10))),
	cf(1,subtree(177,'P_SFX_BASE',-,178)),
	cf(1,phi(177,var(10))),
	cf(1,terminal(178,'+Prep',[176])),
	cf(1,phi(178,var(10))),
	cf(1,subtree(3199,'NP',-,3195)),
	cf(1,phi(3199,var(11))),
	cf(1,subtree(3195,'NPadj',3229,3259)),
	cf(1,phi(3195,var(11))),
	cf(1,cproj(3195,var(43))),
	cf(1,subtree(3229,'NPadj',-,1139)),
	cf(1,phi(3229,var(11))),
	cf(1,subtree(1139,'NPzero',-,1132)),
	cf(1,phi(1139,var(11))),
	cf(1,subtree(1132,'N',1131,188)),
	cf(1,phi(1132,var(11))),
	cf(1,subtree(1131,'N',1115,192)),
	cf(1,phi(1131,var(11))),
	cf(1,subtree(1115,'N',-,198)),
	cf(1,phi(1115,var(11))),
	cf(1,subtree(198,'N_BASE',-,194)),
	cf(1,phi(198,var(11))),
	cf(1,terminal(194,'slaughter',[184])),
	cf(1,phi(194,var(11))),
	cf(1,subtree(192,'N_SFX_BASE',-,191)),
	cf(1,phi(192,var(11))),
	cf(1,terminal(191,'+Noun',[184])),
	cf(1,phi(191,var(11))),
	cf(1,subtree(188,'NNUM_SFX_BASE',-,186)),
	cf(1,phi(188,var(11))),
	cf(1,terminal(186,'+Sg',[184])),
	cf(1,phi(186,var(11))),
	cf(1,subtree(3259,'PPnp',-,2618)),
	cf(1,phi(3259,var(15))),
	cf(1,subtree(2618,'PP',1212,2612)),
	cf(1,phi(2618,var(15))),
	cf(1,subtree(1212,'PP',-,1167)),
	cf(1,phi(1212,var(15))),
	cf(1,subtree(1167,'P',1166,221)),
	cf(1,phi(1167,var(15))),
	cf(1,subtree(1166,'P',-,223)),
	cf(1,phi(1166,var(15))),
	cf(1,subtree(223,'P_BASE',-,224)),
	cf(1,phi(223,var(15))),
	cf(1,terminal(224,'of',[220])),
	cf(1,phi(224,var(15))),
	cf(1,subtree(221,'P_SFX_BASE',-,222)),
	cf(1,phi(221,var(15))),
	cf(1,terminal(222,'+Prep',[220])),
	cf(1,phi(222,var(15))),
	cf(1,subtree(2612,'NP',-,2553)),
	cf(1,phi(2612,var(16))),
	cf(1,subtree(2553,'NPadj',1350,1525)),
	cf(1,phi(2553,var(16))),
	cf(1,subtree(1350,'NPadj',-,1336)),
	cf(1,phi(1350,var(16))),
	cf(1,subtree(1336,'AP[attr]',-,1330)),
	cf(1,phi(1336,var(20))),
	cf(1,subtree(1330,'A',1328,254)),
	cf(1,phi(1330,var(20))),
	cf(1,subtree(1328,'A',-,248)),
	cf(1,phi(1328,var(20))),
	cf(1,subtree(248,'A_BASE',-,238)),
	cf(1,phi(248,var(20))),
	cf(1,terminal(238,'whole',[228])),
	cf(1,phi(238,var(20))),
	cf(1,subtree(254,'A_SFX_BASE',-,253)),
	cf(1,phi(254,var(20))),
	cf(1,terminal(253,'+Adj',[228])),
	cf(1,phi(253,var(20))),
	cf(1,subtree(1525,'NPzero',-,1386)),
	cf(1,phi(1525,var(16))),
	cf(1,subtree(1386,'N',1385,262)),
	cf(1,phi(1386,var(16))),
	cf(1,subtree(1385,'N',1369,266)),
	cf(1,phi(1385,var(16))),
	cf(1,subtree(1369,'N',-,267)),
	cf(1,phi(1369,var(16))),
	cf(1,subtree(267,'N_BASE',-,268)),
	cf(1,phi(267,var(16))),
	cf(1,cproj(267,var(49))),
	cf(1,terminal(268,'herd',[258])),
	cf(1,phi(268,var(16))),
	cf(1,cproj(268,var(49))),
	cf(1,subtree(266,'N_SFX_BASE',-,265)),
	cf(1,phi(266,var(16))),
	cf(1,terminal(265,'+Noun',[258])),
	cf(1,phi(265,var(16))),
	cf(1,subtree(262,'NNUM_SFX_BASE',-,260)),
	cf(1,phi(262,var(16))),
	cf(1,terminal(260,'+Sg',[258])),
	cf(1,phi(260,var(16))),
	cf(1,subtree(1821,'VPall[fin]',-,1817)),
	cf(1,phi(1821,var(0))),
	cf(1,subtree(1817,'VP[perf,fin]',1584,1811)),
	cf(1,phi(1817,var(0))),
	cf(1,subtree(1584,'VP[perf,fin]',-,298)),
	cf(1,phi(1584,var(0))),
	cf(1,subtree(298,'AUX[perf,fin]',-,294)),
	cf(1,phi(298,var(0))),
	cf(1,terminal(294,'has',[294])),
	cf(1,phi(294,var(0))),
	cf(1,subtree(1811,'VPcop[perf]',1602,1807)),
	cf(1,phi(1811,var(0))),
	cf(1,subtree(1602,'VPcop[perf]',-,329)),
	cf(1,phi(1602,var(0))),
	cf(1,subtree(329,'Vcop[perf]',-,324)),
	cf(1,phi(329,var(0))),
	cf(1,terminal(324,'been',[324])),
	cf(1,phi(324,var(0))),
	cf(1,subtree(1807,'ADVPvp',-,1638)),
	cf(1,phi(1807,var(34))),
	cf(1,cproj(1807,var(47))),
	cf(1,subtree(1638,'VPv[pass]',-,1632)),
	cf(1,phi(1638,var(34))),
	cf(1,subtree(1632,'V[pass]',1631,386)),
	cf(1,phi(1632,var(34))),
	cf(1,subtree(1631,'V[pass]',1630,389)),
	cf(1,phi(1631,var(34))),
	cf(1,subtree(1630,'V[pass]',1629,396)),
	cf(1,phi(1630,var(34))),
	cf(1,subtree(1629,'V[pass]',-,399)),
	cf(1,phi(1629,var(34))),
	cf(1,subtree(399,'V_BASE',-,398)),
	cf(1,phi(399,var(34))),
	cf(1,terminal(398,'implement',[343])),
	cf(1,phi(398,var(34))),
	cf(1,subtree(396,'V_SFX_BASE',-,394)),
	cf(1,phi(396,var(34))),
	cf(1,terminal(394,'+Verb',[343])),
	cf(1,phi(394,var(34))),
	cf(1,subtree(389,'VPASS_SFX_BASE',-,390)),
	cf(1,phi(389,var(34))),
	cf(1,terminal(390,'+PastBoth',[343])),
	cf(1,phi(390,var(34))),
	cf(1,subtree(386,'VNOPERS_SFX_BASE',-,387)),
	cf(1,phi(386,var(34))),
	cf(1,terminal(387,'+123SP',[343])),
	cf(1,phi(387,var(34))),
	cf(1,subtree(446,'PERIOD',-,412)),
	cf(1,phi(446,var(0))),
	cf(1,terminal(412,'.',[412])),
	cf(1,phi(412,var(0))),
	cf(1,semform_data(0,50,1,5)),
	cf(1,semform_data(2,62,6,8)),
	cf(1,semform_data(3,86,9,15)),
	cf(1,semform_data(4,144,18,21)),
	cf(1,semform_data(5,159,22,31)),
	cf(1,semform_data(7,179,32,34)),
	cf(1,semform_data(8,198,35,44)),
	cf(1,semform_data(10,223,45,47)),
	cf(1,semform_data(11,248,48,53)),
	cf(1,semform_data(16,267,54,58)),
	cf(1,semform_data(22,329,63,67)),
	cf(1,semform_data(23,399,68,79)),
	cf(1,semform_data(28,1807,68,68)),
	cf(1,fspan(var(0),1,82)),
	cf(1,fspan(var(1),1,15)),
	cf(1,fspan(var(27),6,15)),
	cf(1,fspan(var(28),9,15)),
	cf(1,fspan(var(2),18,58)),
	cf(1,fspan(var(10),32,58)),
	cf(1,fspan(var(11),35,58)),
	cf(1,fspan(var(15),45,58)),
	cf(1,fspan(var(16),48,58)),
	cf(1,fspan(var(20),48,53)),
	cf(1,fspan(var(34),68,79)),
	cf(1,surfaceform(1,'that',1,5)),
	cf(1,surfaceform(51,'in',6,8)),
	cf(1,surfaceform(73,'France',9,15)),
	cf(1,surfaceform(98,',',16,17)),
	cf(1,surfaceform(133,'the',18,21)),
	cf(1,surfaceform(150,'principle',22,31)),
	cf(1,surfaceform(176,'of',32,34)),
	cf(1,surfaceform(184,'slaughter',35,44)),
	cf(1,surfaceform(220,'of',45,47)),
	cf(1,surfaceform(228,'whole',48,53)),
	cf(1,surfaceform(258,'herd',54,58)),
	cf(1,surfaceform(294,'has',59,62)),
	cf(1,surfaceform(324,'been',63,67)),
	cf(1,surfaceform(343,'implemented',68,79)),
	cf(1,surfaceform(412,'.',80,82))
	]).
